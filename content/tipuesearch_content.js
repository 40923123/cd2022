var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsimde_site \n', 'tags': '', 'url': 'About.html'}, {'title': 'W12', 'text': '', 'tags': '', 'url': 'W12.html'}, {'title': '大組倉儲更新步驟', 'text': '這一頁會講解應該如何更新大組倉儲步驟跟必須知道的東西 \n 首先在開始之前大家其實可以觀察一下你每次在更新網站也就是利用cmsimde時就竟都更改些什麼東西呢? \n \n 其實更改的檔案通常有三個其中兩個html檔事記錄你所有網頁的檔案，一個是現在一個是之前，然後還有一個js黨是老師的搜尋系統會自動抓取字串的程式，所以其實在更改之前你會發現如果要進行協同只要處理這三個檔案衝突即可，而js黨則是必須想辦法更改它程式再擷取字串的步驟或這手動暴力應改等之類的，簡單來說是這樣再來以下還有必須注意的。 \n 協同問題篇 \n 須注意同時的問題由於上述所說的主要是js黨的問題導致今天不管是同時修改同一頁資料或不同頁又或者不同頁的資料(是有不同差異的，另解說)都必須解決檔案相衝問題，在github上若檔案相衝github會幫忙用一個特殊格是把兩個相衝的部分框起來並告知，其實只要修改符合合併就能合併了。 \n 步驟解說篇 \n 在步驟前必須先完成以下步驟 \n 1.必須每個成員先將大組倉儲給 fork ，這樣就能獲得一個 自己帳號 的大組倉儲 \n 2.clone 自己帳號 的大組倉儲 \n 3.將倉儲內推送時的person key或者使用ssh的小夥伴必須將.git裡的內容修改成如同自己倉出一樣 \n 這樣就算完成了前置步驟了 \n 再來以下正式進入步驟 \n 1.更改完自己想要的內容後先用正常手續將內容推送至 自己帳號 下的大組倉儲 \n 2.在github上選擇Pull requests的按鍵 \n 3.將merge的消息傳回給組長的大組倉儲(綠綠的給他按下去就對了 \n 4.組長查驗確認沒問題即可merge \n 以上即是正常流程下最順利的狀況，接下來會稍微說明版本同步問題以及merge的衝突問題以及如何解決 \n 首先當近端及遠端的部分不同步 \n 因當先將github上的版本給同步，在觀察commit那一欄要是組長倉儲有更新那裏就可以更新版本 \n 變成和組長一樣，再來在近端用git pull將資料從遠端給抓下來做合併，這樣就完成了最簡單的更新自己的倉儲了。 \n 那如果在github上無法合併可以怎麼做呢? 那說明一件事你在進行merge時跟別人衝突到或者格是有問題之類的，簡單來說就是有問題之後沒更改之後又繼續更新所導致的，那可以試試以下的方法 \n \n 前面有說道能使用git pull進行同步，但是如果自己帳號下github的資料就不對了就算git pull也沒辦法那就使用 git pull 組長大組倉儲網址.git main \n 將正確內容最新版本同步下來後重新push一次到 自己帳號 下的大組倉儲，這樣就可以將遠端成功更新成正確的版本了', 'tags': '', 'url': '大組倉儲更新步驟.html'}, {'title': 'w10_block_ui', 'text': '第一部加上一些註解的影片 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10_block_ui.html'}, {'title': 'midterm', 'text': '這禮拜主要是先畫圖再進行組立然後放置coppeliasim進行模擬，再加上3軸UI介面進行控制 \n 在進行coppeliasim模擬有以下幾點要注意 \n 1軸在模擬時需增加轉速和扭力給他 \n 2中間相互連結且有移動的零件都必須把碰撞打開 \n 3UI介面的程式是加在最一開始的零件上的 \n 4若軸與兩組以上會動的零件相連需另用一個dummy去限制他 \n 操作流程如下 \n 1 先將組合圖匯入 \n 2 將組合圖零件炸開 \n 3 先定義基礎邊 \n 4 將軸開始從基礎邊一一接上去 \n 5 等都接完之後依上述說的將dummy加上去並進行限制，若遇到有街兩邊以上的軸藥劑的再多加dummy \n 6 將碰撞和軸的速度及扭力都打開 \n 7執行 \n 模擬的組立影片在此 影片 \n 結果 \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'midterm.html'}, {'title': 'W7', 'text': '老師課程網頁內容  網址 \n 接下來會有wink影片進行解說 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W7.html'}, {'title': '問題集中串', 'text': '最後更新:2022/03/27 \n', 'tags': '', 'url': '問題集中串.html'}, {'title': '關於協同', 'text': '這一篇是我關於協同部分所寫的文章(僅供個人思想 \n 問題: \n 首先進行第一種猜想(能否讓所有組員同時進行倉儲修改? \n 目前的答案為否 \n 1.進行改版在上傳時是需要個人的KEY的，如果依字面上若想做倒他人也能上傳勢必要有倉儲組長個人的key，但是測試過key是沒有辦法多個帳號共用 \n 2.PPK同理一個PPK只能登記在一個帳號無法共用所以目前無法同時更新 \n 第二種猜想(假設可以同時更新那解決版本衝突得如何運行 \n 1.第一種情況如果一個文本在序列第40行後增加字串，那如果第二人在之後也以先前未改版版本進行並也在第40行之後進行更改兩邊發生衝突該如何解決? \n 我的想法是因該可以寫一段程式幫每則增加的訊息在添加之前把他們上一句進行標記，當今天標記衝突時程式可以跳出訊息並將此段訊息銜接在另一段上，也就是在推送之前先把別人的資料pull下來發現標記有更動則自動變更到新訊息的最後一行在推送 \n 2.第二種強況如在修改的檔案被人刪除時應該怎麼辦，簡單來說每則訊息甚至檔案都是有所謂的贆投如果今天在修改時標頭不見時會讓檔案無法分類進而導致錯亂，關於標題頭問題我之前有遇到類似的，USB裡的檔案貌似在退出時手續不對導致標題頭遺失，電腦沒有辦法綁資料分類導致所有相關檔案全部變成亂碼並且無法判斷數量及大小，目前個人猜想如果在編輯檔案時直接被其他人刪除時，在推送時應該會出現類似的問題，要修改的檔案被刪除電腦無法判斷訊息是被歸類在哪裡進而出現錯誤 \n 我的想法目前也只能將此段訊息用一個程式幫忙賦予新的檔案讓他在出現類似錯誤時先直接開新的檔案紀錄下來，後面再進行除錯 \n 第三種猜想(關於程式協同及機械類的協同 \n 課堂上老師說過程式協同其實相比於機械的協同是可以比較即時的，因為機械相關在協同是必須去與真實情況變動，並且機械及真實受限於很多的規則束腹很難做到非常及時的協同，畢竟很多零件並不像程式一樣隨叫隨到', 'tags': '', 'url': '關於協同.html'}, {'title': '關於git指令失效', 'text': '事情緣由是由2022/03/22晚上在製作影片時發生目前還未知的問題進而導致git指令失效，目前推測原因還是未知，首先推送檔案並未超過(單個檔案>50MB，再者前面也有推送但是沒有問題，所以目前無法判斷有何種問題 \n 解決方法: 將整個近端資料夾刪除後再從github上重新複製下來就沒有問題，關於git並未更改其他東西只是在其他電腦時就自行解決了，有可能是git在運行時path錯亂沒有讀到相關git的執行檔所以才導致至些問題的', 'tags': '', 'url': '關於git指令失效.html'}, {'title': 'W3', 'text': '我負責的影片為5部: \n 第1部:  影片網址 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 第9部:  影片網址   自己的示範影片網址 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 第14部:  影片網址 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 第19部:\xa0 影片網址 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 第31部:\xa0 影片網址 \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W3.html'}, {'title': '小組名單', 'text': '組長: 40923123林坪橙\xa0\xa0 \n 網站 \xa0  倉儲 \n 組員: 40923139夏永晉 \n 網站 \xa0  倉儲 \n 組員: 40923142翁楷翔 \n 網站 \xa0  倉儲 \n 組員: 40923151許睿麒 \n 網站 \xa0  倉儲', 'tags': '', 'url': '小組名單.html'}, {'title': '新增倉儲步驟', 'text': '原本cmsimde的內容主分支是master所以一開始他會因為遠端是main而無法推送，所以在近端新增main分支並將master merge到main裡，先用git remote add origin建立連結，然後在main的情況下把遠端的 README.md給pull下來 \n 簡單來說就是cmsimde本身是屬於master而遠端是main所以主要的大問題是處理分支衝突 \n 下方有影片可以點進去看裡面有詳細步驟還有字幕 \n test \n 影片連結', 'tags': '', 'url': '新增倉儲步驟.html'}, {'title': 'wink test', 'text': '\n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'wink test.html'}]};